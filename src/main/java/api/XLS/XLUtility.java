package api.XLS;//import org.apache.poi.hssf.usermodel.HSSFCell;//import org.apache.poi.hssf.usermodel.HSSFRow;//import org.apache.poi.hssf.usermodel.HSSFSheet;//import org.apache.poi.hssf.usermodel.HSSFWorkbook;//import org.apache.poi.hssf.usermodel.HSSFWorkbook;//import org.apache.poi.ss.usermodel.DataFormatter;import org.apache.poi.openxml4j.exceptions.InvalidFormatException;import org.apache.poi.openxml4j.opc.OPCPackage;import org.apache.poi.ss.usermodel.DataFormatter;import org.apache.poi.xssf.usermodel.XSSFCell;import org.apache.poi.xssf.usermodel.XSSFRow;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;public class XLUtility {//    public static FileInputStream fi;    public static FileOutputStream fo;    public static XSSFWorkbook wb;    public static XSSFSheet ws;    public static XSSFRow row;    public static XSSFCell cell;    public  static OPCPackage fi;    public static int getRowCount(String xlFile, String xlSheet) throws IOException, InvalidFormatException {        fi = OPCPackage.open(new File(xlFile));        wb = new XSSFWorkbook(fi);   //     fi = new FileInputStream(xlFile);   //     wb = new XSSFWorkbook(fi);        ws = wb.getSheet(xlSheet);        int rowCount = ws.getLastRowNum();       // wb.close();        fi.close();        return rowCount;    }    public static int getCellCount(String xlFile, String xlSheet, int rowNum) throws IOException, InvalidFormatException {       fi = OPCPackage.open(new File(xlFile));         wb = new XSSFWorkbook(fi);        ws = wb.getSheet(xlSheet);        row = ws.getRow(rowNum);        int columnCount = row.getLastCellNum();       // wb.close();        fi.close();        return columnCount;    }    public static String getCellData(String xlFile, String xlSheet, int rowNum, int columnNum) throws IOException, InvalidFormatException {       fi = OPCPackage.open(new File(xlFile));         wb = new XSSFWorkbook(fi);        ws = wb.getSheet(xlSheet);        row = ws.getRow(rowNum);        cell = row.getCell(columnNum);        String data;        try {            DataFormatter formatter = new DataFormatter();            data = formatter.formatCellValue(cell);        } catch (Exception e) {            data = "";        }       // wb.close();        fi.close();        return data;    }    public static void setCellData(String xlFile, String xlSheet, int rowNum, int columnNum, String data) throws IOException, InvalidFormatException {         fi = OPCPackage.open(new File(xlFile));        wb = new XSSFWorkbook(fi);        ws = wb.getSheet(xlSheet);        row = ws.getRow(rowNum);        cell = row.createCell(columnNum);        cell.setCellValue(data);        fo = new FileOutputStream(xlFile);        wb.write(fo);      //  wb.close();        fo.close();        fi.close();    }}