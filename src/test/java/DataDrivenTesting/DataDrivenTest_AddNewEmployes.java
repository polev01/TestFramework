package DataDrivenTesting;import api.XLS.XLUtility;import io.restassured.RestAssured;import io.restassured.http.Method;import io.restassured.response.Response;import io.restassured.specification.RequestSpecification;import org.apache.poi.openxml4j.exceptions.InvalidFormatException;import org.json.JSONObject;import org.testng.Assert;import org.testng.annotations.DataProvider;import org.testng.annotations.Test;import java.io.IOException;public class DataDrivenTest_AddNewEmployes {    @Test(dataProvider = "empdataprovider")    void postNewEmployees(String ename, String esal, String eage){        //Specify base RRI        RestAssured.baseURI="http://dummy.restapiexample.com/api/v1";        //Request object        RequestSpecification httpRequest = RestAssured.given();        //Here the data which we ca send along with the post request        JSONObject requestPrams = new JSONObject();        requestPrams.put("name",ename);        requestPrams.put("salary",esal);        requestPrams.put("age",eage);        //Add header        httpRequest.header("Content-Type","application/json");        //Body in json        httpRequest.body(requestPrams.toString());        //POST method        Response response = httpRequest.request(Method.POST,"/create");        //Capture response body for validation        String responseBody = response.getBody().asString();        System.out.println("My response is " + responseBody);        Assert.assertEquals(responseBody.contains(ename),true);        Assert.assertEquals(responseBody.contains(esal),true);        Assert.assertEquals(responseBody.contains(eage),true);        int statuscode= response.getStatusCode();        Assert.assertEquals(statuscode, 200);    }    @DataProvider(name="empdataprovider")    Object[][] getEmpData() throws IOException, InvalidFormatException {        //Read data from excel        String path=System.getProperty("user.dir")+"\\src\\test\\java\\DataDrivenTesting\\empdata.xlsx";        int rownum = XLUtility.getRowCount(path, "empl");        int colnum = XLUtility.getCellCount(path, "empl",1);        String empdata[][]=new String[rownum][colnum];        for (int i = 1; i <= rownum; i++){            for (int j = 0; j < colnum; j++){                empdata[i - 1][j] = XLUtility.getCellData(path, "empl", i, j);            }        }        //String empdata[][]={{"polev001", "300", "20"},{"polev002", "400", "21"},{"polev003", "500", "22"}};        return(empdata);    }}